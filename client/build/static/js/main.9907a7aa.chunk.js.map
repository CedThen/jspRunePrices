{"version":3,"sources":["components/ResponsiveContext.jsx","components/Header.jsx","constants.js","apiRequests/index.js","themes/styling.js","components/LoadingSkeleton.jsx","services/helperFx.js","themes/colors.js","components/TimeFrameRadio.jsx","components/Chart.jsx","assets/ber.png","assets/cham.png","assets/gul.png","assets/ist.png","assets/jah.png","assets/lem.png","assets/lo.png","assets/mal.png","assets/ohm.png","assets/pul.png","assets/sur.png","assets/um.png","assets/vex.png","assets/zod.png","components/RunePngs.jsx","components/PriceRow.jsx","components/Prices.jsx","components/Layouts.jsx","components/Home.jsx","App.js","components/Fonts.jsx","themes/index.js","index.js"],"names":["ResponsiveContext","React","createContext","CinzText","children","restProps","fontFamily","Header","isMobile","useContext","w","h","display","justifyContent","alignItems","padding","position","top","right","flexDirection","href","fontSize","paddingLeft","cursor","backgroundColor","align","fixedUrl","fetchLastAmount","amount","a","fetch","num","json","baseStyling","maxWidth","overflowX","paddingRight","responsiveLayouts","heading","size","LoadingSkeleton","skellyArray","Array","from","length","v","i","DefaultSkelly","className","gridTemplateColumns","gap","paddingTop","map","height","paddingBottom","color","startColor","endColor","style","width","MobileSkelly","as","toFixed","fixed","re","RegExp","toString","match","extractTimeLabels","data","d","displayLocalTime","createdAt","time","Date","toLocaleDateString","month","day","toLocaleTimeString","hour","minute","timeFrameHash","colors","TimeFrameRadioCard","props","useRadio","getInputProps","getCheckboxProps","input","checkbox","borderWidth","borderRadius","boxShadow","_checked","bg","_hover","px","py","TimeFrameRadio","fetchData","useRadioGroup","name","defaultValue","onChange","timeFrame","getRootProps","getRadioProps","group","templateColumns","value","radio","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","fontStyle","family","tickStyle","font","options","title","maxTicksLimit","Daily","Weekly","responsive","plugins","legend","tooltip","titleColor","titleFont","bodyColor","bodyFont","text","scales","yAxes","ticks","callback","val","xAxes","maintainAspectRatio","Chart","chartedRune","splitData","res","Object","keys","runeprices","forEach","rune","dataPoint","askInput","askAvg","push","splitRunes","runeData","reverse","labels","chartData","datasets","label","borderColor","RuneImage","objectFit","RunePngs","lem","src","LemPng","alt","pul","PulPng","um","UmPng","mal","MalPng","ist","IstPng","gul","GulPng","vex","VexPng","ohm","OhmPng","lo","LoPng","sur","SurPng","ber","BerPng","jah","JahPng","cham","ChamPng","zod","ZodPng","PriceCell","border","determineColor","PriceRow","prevRuneprices","onRowClick","isSelected","bidDiff","bidAvg","askDiff","bidColor","askColor","midAvg","percentChange","changeColor","onClick","background","textAlign","count","HeaderCell","f","fontWeight","Prices","variant","NormLayout","setChartedRune","MobileLayout","maxHeight","Home","useState","setData","response","useEffect","layoutProps","App","useMediaQuery","query","Provider","Fonts","styles","theme","extendTheme","brand","green","red","grey","orange","white","black","lightGrey","fonts","components","Text","baseStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9907a7aa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ResponsiveContext = React.createContext()\r\n\r\nexport default ResponsiveContext","import React from 'react'\r\nimport {\r\n  Box, Text,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverFooter,\r\n  PopoverArrow,\r\n\r\n} from '@chakra-ui/react'\r\nimport ResponsiveContext from './ResponsiveContext'\r\nimport { LinkIcon } from '@chakra-ui/icons'\r\n\r\nconst CinzText = ({ children, ...restProps }) => <Text {...restProps} fontFamily=\"Cinzel\">{children}</Text>\r\n\r\nconst Header = () => {\r\n  const isMobile = React.useContext(ResponsiveContext)\r\n  const responsiveHeader = () => {\r\n    const mobileLayout = {\r\n      w: '100%',\r\n      h: \"5%\",\r\n      display: \"flex\",\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: '10px'\r\n    }\r\n    const defaultLayout = {\r\n      position: \"fixed\",\r\n      top: \"10\",\r\n      right: \"20\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\"\r\n    }\r\n    return isMobile ? mobileLayout : defaultLayout\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      {...responsiveHeader(isMobile)}\r\n    >\r\n      <a href=\"https://forums.d2jsp.org/forum.php?f=268&c=2\">\r\n        <Text fontFamily=\"Exocet\" fontSize=\"20\" ><LinkIcon /> d2Jsp</Text>\r\n      </a>\r\n      <Popover>\r\n        <PopoverTrigger>\r\n          <Text fontFamily=\"Exocet\" fontSize=\"20\" paddingLeft=\"50\" cursor=\"pointer\">About</Text>\r\n        </PopoverTrigger>\r\n        <PopoverContent backgroundColor=\"brand.grey\">\r\n          <PopoverArrow />\r\n          <PopoverHeader>\r\n            <CinzText align=\"center\" fontSize=\"lg\">Methodology</CinzText>\r\n          </PopoverHeader>\r\n          <PopoverBody>\r\n            <CinzText >This data is collected once an hour from the latest 100 posts under the \"runes\" filter on d2Jsp for softcore d2R. The weekly and monthly views will work once enough data has been collected (should have enough by 1/11/21)</CinzText>\r\n            <br />\r\n            <CinzText >This should not be considered a definitive authority on rune pricing, as its data processing is imperfect and cannot handle all the jargon out there. </CinzText>\r\n            <br />\r\n            <CinzText>\r\n              However, I hope it helps make understanding rune pricing easier.\r\n            </CinzText>\r\n          </PopoverBody>\r\n          <PopoverHeader></PopoverHeader>\r\n          <PopoverFooter>\r\n            <CinzText >Questions?</CinzText>\r\n            <CinzText>Reach me at cedthen@gmail.com</CinzText>\r\n          </PopoverFooter>\r\n        </PopoverContent>\r\n      </Popover>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Header","const fixedUrl = `jspscraper.herokuapp.com`\r\n\r\nexport const fetchLatestApi = `https://${fixedUrl}/api/latest/`\r\nexport const fetchLastAmountApi = (num) => `https://${fixedUrl}/api/last/${num}`\r\n\r\n","import { fetchLastAmountApi, fetchLatestApi } from \"../constants\"\r\n\r\nexport const fetchLatestData = async () => {\r\n  return await (await fetch(fetchLatestApi)).json()\r\n}\r\n\r\nexport const fetchLastAmount = async (amount) => {\r\n  return await (await fetch(fetchLastAmountApi(amount))).json()\r\n}","export const baseStyling = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  flexDirection: 'column',\r\n  maxWidth: '100%',\r\n  overflowX: 'hidden',\r\n  paddingLeft: '20px',\r\n  paddingRight: '20px',\r\n}\r\n\r\nexport const responsiveLayouts = (isMobile) => {\r\n  const defaultLayout = {\r\n    heading: {\r\n      size: \"3xl\",\r\n      padding: \"20px\"\r\n    }\r\n  }\r\n  const mobileLayout = {\r\n    heading: {\r\n      size: 'xl',\r\n      padding: '10px',\r\n    }\r\n  }\r\n  return isMobile ? mobileLayout : defaultLayout\r\n}","import React from 'react'\r\n\r\nimport { Heading, Grid, GridItem, Box, Text } from '@chakra-ui/layout';\r\nimport { Skeleton, Stack } from '@chakra-ui/react'\r\nimport { baseStyling } from '../themes/styling';\r\nimport ResponsiveContext from './ResponsiveContext';\r\nimport { responsiveLayouts } from '../themes/styling';\r\nimport Header from './Header';\r\n\r\nconst LoadingSkeleton = () => {\r\n  const isMobile = React.useContext(ResponsiveContext)\r\n  const skellyArray = Array.from({ length: 14 }, (v, i) => i + 1)\r\n\r\n  const DefaultSkelly = () =>\r\n    <Grid className=\"body\" gridTemplateColumns=\"2fr 3fr\" h=\"100%\" w=\"100%\" gap={10} paddingTop=\"20\">\r\n      <GridItem >\r\n        <Stack>\r\n          {skellyArray.map(() => <Skeleton height=\"30px\" paddingBottom=\"10\" color=\"brand.orange\" startColor='brand.lightGrey' endColor='brand.grey' />)}\r\n        </Stack>\r\n      </GridItem>\r\n      <GridItem style={{ width: '100%', height: '80%', paddingRight: '10px' }}>\r\n        <Skeleton height=\"700px\" padding=\"5\" color=\"brand.orange\" startColor='brand.lightGrey' endColor='brand.grey' />\r\n      </GridItem>\r\n    </Grid>\r\n\r\n  const MobileSkelly = () =>\r\n    <Stack width=\"300px\">\r\n      {skellyArray.map(() => <Skeleton height=\"30px\" paddingBottom=\"10\" color=\"brand.orange\" startColor='brand.lightGrey' endColor='brand.grey' />)}\r\n    </Stack>\r\n\r\n  return (\r\n    <Box style={{ ...baseStyling, height: '100vh' }} backgroundColor='brand.grey'>\r\n      <Header />\r\n      <Heading {...responsiveLayouts(isMobile).heading} color=\"brand.white\">JSP <Text as=\"span\" color='brand.orange'>Rune</Text> Prices</Heading>\r\n      {isMobile ? <MobileSkelly /> : <DefaultSkelly />}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default LoadingSkeleton","export function toFixed(num, fixed) {\r\n  // eslint-disable-next-line\r\n  var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\r\n  return num.toString().match(re)[0];\r\n}\r\n\r\nexport function splitRunes(data) {\r\n  let res = {}\r\n  Object.keys(data[0].runeprices).forEach(rune => {\r\n    data.forEach(dataPoint => {\r\n      let askInput = dataPoint.runeprices[rune].askAvg\r\n      res[rune] ? res[rune].push(askInput) : res[rune] = [askInput] // make an array if not there\r\n    })\r\n  })\r\n  return res\r\n}\r\n\r\nexport function extractTimeLabels(data) {\r\n  return data.length <= 24 ? data.map(d => displayLocalTime(d.createdAt)) : data.map(d => displayLocalDate(d.createdAt))\r\n}\r\n\r\nexport function displayLocalTime(time) {\r\n  return new Date(time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n}\r\n\r\nfunction displayLocalDate(time) {\r\n  return new Date(time).toLocaleDateString([], { month: 'short', day: '2-digit' })\r\n}\r\n\r\nexport const timeFrameHash = {\r\n  'Daily': 24,\r\n  'Weekly': 168,\r\n  'Monthly': 730\r\n}\r\n\r\nexport function determineMaxTicks(length) {\r\n  if (length <= timeFrameHash.Daily) return 24\r\n  else if (length <= timeFrameHash.Weekly) return 7\r\n  return 30\r\n}","export const colors = {\r\n  green: '#1BB711',\r\n  d2Red: '#cd0d01',\r\n  grey: '#202124',\r\n  d2Orange: '#ffa800',\r\n  white: '#ffffff',\r\n  lineBorder: 'rgb(255, 99, 132)',\r\n  lineBackground: 'rgba(255, 99, 132, 0.5)'\r\n}\r\n","import { useRadio, Box, useRadioGroup, Grid, GridItem, Text } from '@chakra-ui/react'\r\nimport { timeFrameHash } from '../services/helperFx'\r\nconst TimeFrameRadioCard = (props) => {\r\n  const { getInputProps, getCheckboxProps } = useRadio(props)\r\n  const input = getInputProps()\r\n  const checkbox = getCheckboxProps()\r\n\r\n  return (\r\n    <Box as='label'>\r\n      <input {...input} />\r\n      <Box\r\n        {...checkbox}\r\n        cursor='pointer'\r\n        borderWidth='1px'\r\n        borderRadius='md'\r\n        boxShadow='md'\r\n        _checked={{\r\n          bg: 'brand.lightGrey',\r\n          color: 'white',\r\n          // borderColor: 'brand.lightGrey',\r\n        }}\r\n        // _focus={{\r\n        //   boxShadow: 'outline',\r\n        // }}\r\n        _hover={{\r\n          bg: 'brand.lightGrey',\r\n          color: 'white',\r\n        }}\r\n        px={5}\r\n        py={3}\r\n      >\r\n        <Text fontFamily=\"Exocet\">{props.children}</Text>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst TimeFrameRadio = ({ fetchData }) => {\r\n  const options = ['Daily', \"Weekly\", \"Monthly\"];\r\n\r\n  const { getRootProps, getRadioProps } = useRadioGroup({\r\n    name: 'Timeframe',\r\n    defaultValue: 'Daily',\r\n    onChange: (timeFrame) => fetchData(timeFrameHash[timeFrame]),\r\n  })\r\n  const group = getRootProps()\r\n  return (\r\n    <Box {...group} display=\"flex\" flexDirection=\"row\">\r\n      <Grid templateColumns=\"1fr 1fr 1fr\" w=\"75%\">\r\n        {options.map((value) => {\r\n          const radio = getRadioProps({ value })\r\n          return (\r\n            <GridItem padding=\"10px\">\r\n              <TimeFrameRadioCard key={value} {...radio}>\r\n                {value}\r\n              </TimeFrameRadioCard>\r\n            </GridItem>\r\n          )\r\n        })}\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default TimeFrameRadio","import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { extractTimeLabels, splitRunes } from '../services/helperFx'\r\nimport { colors } from '../themes/colors'\r\nimport { Box, Center, Text } from '@chakra-ui/react'\r\nimport TimeFrameRadio from './TimeFrameRadio'\r\nimport { determineMaxTicks } from '../services/helperFx'\r\nimport ResponsiveContext from './ResponsiveContext';\r\n\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst fontStyle = {\r\n  family: \"Exocet\",\r\n  size: 15\r\n}\r\n\r\nconst tickStyle = {\r\n  color: 'white',\r\n  font: fontStyle\r\n}\r\n\r\nconst options = (title, data, isMobile) => {\r\n  const maxTicksLimit = isMobile ? 5 : determineMaxTicks(data.length)\r\n\r\n  return {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      tooltip: {\r\n        titleColor: 'white',\r\n        titleFont: fontStyle,\r\n\r\n        bodyColor: colors.d2Orange,\r\n        bodyFont: fontStyle\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: title,\r\n        color: colors.d2Orange,\r\n        font: {\r\n          ...fontStyle,\r\n          size: isMobile ? 20 : 40\r\n        }\r\n      },\r\n    },\r\n    scales: {\r\n      yAxes: {\r\n        ticks: {\r\n          ...tickStyle,\r\n          callback: (val) => {\r\n            return ('    ' + val)\r\n          },\r\n        },\r\n      },\r\n      xAxes: {\r\n        // type: 'time',\r\n        ticks: {\r\n          ...tickStyle,\r\n          maxTicksLimit: maxTicksLimit\r\n        }\r\n      }\r\n    },\r\n    maintainAspectRatio: false,\r\n  };\r\n}\r\n\r\nfunction Chart({ data, chartedRune, fetchData }) {\r\n  const splitData = splitRunes(data)\r\n  // only reversing one rune's dataSet at a time instead of reversing all 14 of them\r\n  const runeData = splitData[chartedRune].reverse()\r\n  const labels = extractTimeLabels(data).reverse()\r\n  const isMobile = React.useContext(ResponsiveContext)\r\n  const chartData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: chartedRune,\r\n        data: runeData,\r\n        borderColor: colors.lineBorder,\r\n        backgroundColor: colors.lineBackground,\r\n      }\r\n    ],\r\n  }\r\n\r\n  return (\r\n    <Box w=\"100%\" h={isMobile ? \"50%\" : '100%'} >\r\n      <Line data={chartData} options={options(chartedRune, runeData, isMobile)} width=\"90%\" height=\"80%\" />\r\n      <Center padding=\"20px\" display=\"flex\" flexDirection=\"column\">\r\n        <Text fontFamily=\"Exocet\" fontSize=\"xl\">Timeframe</Text>\r\n        <TimeFrameRadio fetchData={fetchData} />\r\n      </Center>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Chart","export default __webpack_public_path__ + \"static/media/ber.b998fe19.png\";","export default __webpack_public_path__ + \"static/media/cham.9aad9aa5.png\";","export default __webpack_public_path__ + \"static/media/gul.6511785b.png\";","export default __webpack_public_path__ + \"static/media/ist.ea49266a.png\";","export default __webpack_public_path__ + \"static/media/jah.3df4ae7c.png\";","export default __webpack_public_path__ + \"static/media/lem.7e8e05e9.png\";","export default __webpack_public_path__ + \"static/media/lo.94b9e270.png\";","export default __webpack_public_path__ + \"static/media/mal.ace2182f.png\";","export default __webpack_public_path__ + \"static/media/ohm.451a2bff.png\";","export default __webpack_public_path__ + \"static/media/pul.f6805011.png\";","export default __webpack_public_path__ + \"static/media/sur.d8163a20.png\";","export default __webpack_public_path__ + \"static/media/um.b3fca588.png\";","export default __webpack_public_path__ + \"static/media/vex.99f5de6f.png\";","export default __webpack_public_path__ + \"static/media/zod.21d25b59.png\";","import BerPng from '../assets/ber.png'\r\nimport ChamPng from '../assets/cham.png'\r\nimport GulPng from '../assets/gul.png'\r\nimport IstPng from '../assets/ist.png'\r\nimport JahPng from '../assets/jah.png'\r\nimport LemPng from '../assets/lem.png'\r\nimport LoPng from '../assets/lo.png'\r\nimport MalPng from '../assets/mal.png'\r\nimport OhmPng from '../assets/ohm.png'\r\nimport PulPng from '../assets/pul.png'\r\nimport SurPng from '../assets/sur.png'\r\nimport UmPng from '../assets/um.png'\r\nimport VexPng from '../assets/vex.png'\r\nimport ZodPng from '../assets/zod.png'\r\nimport { Image } from '@chakra-ui/react'\r\n\r\nconst RuneImage = (props) => <Image w=\"36px\" objectFit=\"contain\" paddingRight=\"3\" {...props} />\r\n\r\nconst RunePngs = (rune) => {\r\n  const runesMap = {\r\n    lem: <RuneImage src={LemPng} alt=\"lem\" />,\r\n    pul: <RuneImage src={PulPng} alt=\"pul\" />,\r\n    um: <RuneImage src={UmPng} alt=\"um\" />,\r\n    mal: <RuneImage src={MalPng} alt=\"mal\" />,\r\n    ist: <RuneImage src={IstPng} alt=\"ist\" />,\r\n    gul: <RuneImage src={GulPng} alt=\"gul\" />,\r\n    vex: <RuneImage src={VexPng} alt=\"vex\" />,\r\n    ohm: <RuneImage src={OhmPng} alt=\"ohm\" />,\r\n    lo: <RuneImage src={LoPng} alt=\"lo\" />,\r\n    sur: <RuneImage src={SurPng} alt=\"sur\" />,\r\n    ber: <RuneImage src={BerPng} alt=\"ber\" />,\r\n    jah: <RuneImage src={JahPng} alt=\"jah\" />,\r\n    cham: <RuneImage src={ChamPng} alt=\"cham\" />,\r\n    zod: <RuneImage src={ZodPng} alt=\"zod\" />,\r\n  }\r\n  return runesMap[rune]\r\n}\r\n\r\nexport default RunePngs","import React from 'react'\r\nimport { Tr, Td, Text } from '@chakra-ui/react'\r\nimport { toFixed } from '../services/helperFx'\r\n\r\nimport RunePngs from './RunePngs'\r\nimport ResponsiveContext from './ResponsiveContext'\r\nconst decimalPlaces = 2\r\n\r\nconst PriceCell = ({ children, ...restProps }) => {\r\n  const isMobile = React.useContext(ResponsiveContext)\r\n  return (<Td fontFamily=\"ExocetBold\" border=\"0.5px\" borderColor=\"white\"><Text {...restProps} fontSize={isMobile ? 'sm' : 'lg'} >{children}</Text></Td>)\r\n}\r\n\r\nconst PriceRow = ({ runeprices, rune, prevRuneprices, onRowClick, isSelected }) => {\r\n  let bidDiff = runeprices[rune].bidAvg - prevRuneprices[rune].bidAvg\r\n  let askDiff = runeprices[rune].askAvg - prevRuneprices[rune].askAvg\r\n  let bidColor = determineColor(bidDiff)\r\n  let askColor = determineColor(askDiff)\r\n  let midAvg = (runeprices[rune].bidAvg + runeprices[rune].askAvg) / 2\r\n  let prevMidAvg = (prevRuneprices[rune].bidAvg + prevRuneprices[rune].askAvg) / 2\r\n  let percentChange = (midAvg - prevMidAvg) / midAvg\r\n  let changeColor = determineColor(percentChange)\r\n\r\n  return (\r\n    <Tr onClick={() => onRowClick(rune)} _hover={{ background: 'brand.lightGrey' }} backgroundColor={isSelected ? 'brand.lightGrey' : 'brand.grey'}>\r\n      <PriceCell color=\"brand.orange\" display=\"flex\" flexDirection=\"row\">{RunePngs(rune)}{rune}</PriceCell>\r\n      <PriceCell color={bidColor} textAlign='right'>{toFixed(runeprices[rune].bidAvg, decimalPlaces)}<span></span></PriceCell>\r\n      <PriceCell color={askColor} textAlign='right'>{toFixed(runeprices[rune].askAvg, decimalPlaces)}</PriceCell>\r\n      <PriceCell color={changeColor} textAlign='right'>{toFixed(percentChange * 100, decimalPlaces)}%</PriceCell>\r\n      <PriceCell textAlign='right'>{runeprices[rune].count}</PriceCell>\r\n    </Tr>\r\n  )\r\n}\r\n\r\nfunction determineColor(num) {\r\n  return num > 0 ? 'brand.green' : num === 0 ? 'brand.white' : 'brand.red'\r\n}\r\n\r\n\r\nexport default PriceRow","import React from 'react'\r\nimport {\r\n  Box,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  TableCaption,\r\n  Text\r\n} from '@chakra-ui/react'\r\nimport PriceRow from './PriceRow'\r\nimport { displayLocalTime } from '../services/helperFx'\r\nimport ResponsiveContext from './ResponsiveContext'\r\n\r\nconst HeaderCell = ({ children, ...restProps }) => {\r\n  const isMobile = React.useContext(ResponsiveContext)\r\n  return (<Th fontFamily=\"ExocetBold\" f fontWeight=\"light\" border='1px' {...restProps}><Text fontSize={isMobile ? 'sm' : 'md'} textAlign=\"center\">{children}</Text></Th>)\r\n}\r\n\r\nconst Prices = ({ data, onRowClick, chartedRune }) => {\r\n  const { runeprices, createdAt } = data[0]\r\n  const { runeprices: prevRuneprices } = data[1]\r\n  const isMobile = React.useContext(ResponsiveContext)\r\n\r\n  return (\r\n    <Box >\r\n      <Table variant=\"simple\" size={isMobile ? 'sm' : 'md'}>\r\n        <TableCaption>Updates once an hour. Last updated at {displayLocalTime(createdAt)}</TableCaption>\r\n        <Thead>\r\n          <Tr >\r\n            <HeaderCell borderColor='white'>Rune</HeaderCell>\r\n            <HeaderCell borderColor='white'>Bid</HeaderCell>\r\n            <HeaderCell borderColor='white'>Ask</HeaderCell>\r\n            <HeaderCell borderColor='white'>% Chg</HeaderCell>\r\n            <HeaderCell borderColor='white'>Vol</HeaderCell>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {Object.keys(runeprices).map(rune => {\r\n            let isSelected = rune === chartedRune\r\n            return (<PriceRow\r\n              isSelected={isSelected}\r\n              runeprices={runeprices}\r\n              rune={rune}\r\n              prevRuneprices={prevRuneprices}\r\n              onRowClick={onRowClick} />)\r\n          })}\r\n        </Tbody>\r\n      </Table>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Prices","import React from 'react'\nimport { Grid, GridItem } from '@chakra-ui/layout';\nimport Chart from './Chart';\nimport Prices from './Prices';\n\n\nexport const NormLayout = ({ data, setChartedRune, chartedRune, fetchData }) => (\n  <Grid className=\"body\" gridTemplateColumns=\"2fr 3fr\" h=\"100%\" w=\"100%\" gap={5}>\n    <GridItem style={{ width: '100%', height: '80%' }}>\n      <Prices data={[data[0], data[1]]} onRowClick={(rune) => setChartedRune(rune)} chartedRune={chartedRune} />\n    </GridItem>\n    <GridItem style={{ width: '100%', height: '80%', padding: '10px' }}>\n      <Chart data={data} chartedRune={chartedRune} fetchData={fetchData} />\n    </GridItem>\n  </Grid>\n)\n\nexport const MobileLayout = ({ data, setChartedRune, chartedRune, fetchData }) => (\n  <>\n    <Prices maxWidth=\"100%\" w=\"100%\" data={[data[0], data[1]]} onRowClick={(rune) => setChartedRune(rune)} chartedRune={chartedRune} />\n    <Chart maxHeight=\"300px\" data={data} chartedRune={chartedRune} fetchData={fetchData} />\n  </>\n)\n\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Heading, Box, Text, } from '@chakra-ui/layout';\r\nimport Header from './Header';\r\n\r\nimport { fetchLastAmount } from '../apiRequests';\r\nimport LoadingSkeleton from './LoadingSkeleton';\r\nimport { responsiveLayouts } from '../themes/styling';\r\nimport ResponsiveContext from './ResponsiveContext';\r\nimport { baseStyling } from '../themes/styling';\r\n\r\nimport { NormLayout, MobileLayout } from './Layouts';\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState();\r\n  const [chartedRune, setChartedRune] = useState('ber') // string\r\n  async function fetchData(amount = 24) {\r\n    const response = await fetchLastAmount(amount)\r\n    setData(response)\r\n  }\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const isMobile = useContext(ResponsiveContext)\r\n\r\n  if (!data)\r\n    return (<LoadingSkeleton />)\r\n\r\n  const layoutProps = {\r\n    data: data,\r\n    setChartedRune,\r\n    chartedRune,\r\n    fetchData\r\n  }\r\n\r\n  return (\r\n    <Box style={{ ...baseStyling, width: '100vw', height: '100vh' }} backgroundColor='brand.grey'>\r\n      <Header />\r\n      <Heading {...responsiveLayouts(isMobile).heading} color=\"brand.white\">JSP <Text as=\"span\" color='brand.orange'>Rune</Text> Prices</Heading>\r\n      {isMobile ? <MobileLayout {...layoutProps} /> : <NormLayout {...layoutProps} />}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport Home from './components/Home'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport ResponsiveContext from './components/ResponsiveContext'\r\n\r\nfunction App() {\r\n  const isMobile = useMediaQuery({ query: '(max-width: 480px)' })\r\n  return (\r\n    <ResponsiveContext.Provider value={isMobile}>\r\n      <Home />\r\n    </ResponsiveContext.Provider>);\r\n}\r\n\r\nexport default App;\r\n/*\r\n  use rune pictures next to runes\r\n  resizing responsiveness\r\n    https://www.chartjs.org/docs/latest/configuration/responsive.html\r\n*/","import { Global } from '@emotion/react'\r\n\r\nconst boldUrl = '../fonts/exocetBold.ttf'\r\nconst lightUrl = '../fonts/exocetLight.ttf'\r\n\r\nconst Fonts = () => (\r\n  <Global\r\n    styles={`\r\n      /* latin */\r\n      @font-face {\r\n        font-family: 'ExocetBold';\r\n        font-style: normal;\r\n        src: url('${boldUrl}') format('truetype');        \r\n      },\r\n      @font-face {\r\n        font-family: 'ExocetLight';\r\n        font-style: normal;\r\n        src: url('${lightUrl}') format('truetype');        \r\n      }\r\n      `}\r\n  />\r\n)\r\n\r\nexport default Fonts","import { extendTheme } from '@chakra-ui/react'\r\n// import { createBreakpoints } from '@chakra-ui/theme-tools'\r\n\r\n// This is the default breakpoint\r\n// const breakpoints = createBreakpoints({\r\n//   sm: '30em',\r\n//   md: '48em',\r\n//   lg: '62em',\r\n//   xl: '80em',\r\n//   '2xl': '96em',\r\n// })\r\n\r\n\r\nconst theme = extendTheme({\r\n  colors: {\r\n    brand: {\r\n      green: '#26ff00',\r\n      red: '#ff0f00',\r\n      grey: '#202124',\r\n      orange: '#ffa800',\r\n      white: '#ffffff',\r\n      black: '#000000',\r\n      lightGrey: '#2c2e33',\r\n    }\r\n  },\r\n  fonts: {\r\n    heading: 'ExocetBold',\r\n  },\r\n  components: {\r\n    Text: {\r\n      baseStyle: {\r\n        color: 'brand.white'\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default theme","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { ChakraProvider } from '@chakra-ui/react'\r\nimport Fonts from './components/Fonts'\r\nimport theme from './themes/index.js'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ChakraProvider theme={theme}>\r\n      <Fonts />\r\n      <App />\r\n    </ChakraProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}